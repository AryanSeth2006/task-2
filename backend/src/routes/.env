// src/routes/auth.ts
import express from 'express';
import { registerUser, loginUser } from '../controllers/authController';
import { authenticateToken } from '../middleware/authMiddleware';
import bcrypt from 'bcrypt';
import User from '../models/User';
const router = express.Router();

router.post('/register', registerUser);
router.post('/login', loginUser);

// Example of a protected route

router.post('/signup', async (req, res) => {
    const { username, email, password, referrerId } = req.body;
  
    const hashedPassword = await bcrypt.hash(password, 10);
  
    const newUser = new User({
      username,
      email,
      password: hashedPassword,
      coins: 0,
      referralClicks: 0,
      referralSignUps: 0
    });
  
    await newUser.save();
  
    if (referrerId) {
      const referrer = await User.findById(referrerId);
      if (referrer) {
        referrer.referralSignUps += 1;
        referrer.coins += 10; // Reward coins for a successful referral
        await referrer.save();
      }
    }
  
    res.status(201).send(newUser);
  });

export default router;
